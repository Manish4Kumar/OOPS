                                       Interview Questions
                                       1. Why do we use OOPs?
                                       
                                       ❖ It gives clarity in programming and allows simplicity in solving complex problems. 
                                       ❖ Data and code are bound together by encapsulation.
                                       ❖ Code can be reused, and it reduces redundancy. 
                                       ❖ It also helps to hide unnecessary details with the help of Data Abstraction. 
                                       ❖ Problems can be divided into subparts.
                                       ❖ It increases the readability, understandability, and maintainability of the code.
                                       
                                       
                                       
                                       
                                       
                                       2. What are the differences between the constructor and the method?
                                       
                                       
                                       3. What are the main features of OOPs?
                                       ❖ Inheritance 
                                       ❖ Encapsulation 
                                       ❖ Polymorphism 
                                       ❖ Data Abstraction
                                       
                                       4. The disadvantage of OOPs? 
                                       ❖ Requires pre-work and proper planning.
                                       ❖ In certain scenarios, programs can consume a large amount of memory. 
                                       ❖ Not suitable for a small problem. 
                                       ❖ Proper documentation is required for later use.
                                       
                                       
                                       
                                       5. What is the difference between class and structure? 
                                       Class: User-defined blueprint from which objects are created.
                                       It consists of methods or sets of instructions that are to be performed on the objects.
                                       Structure: A structure is basically a user-defined collection of variables of different data types.
                                       
                                       
                                       
                                       6. What is the difference between a class and an object? 
                                       
                                       Class Class is the blueprint of an object.
                                       It is used to create objects. 
                                       Object An object is an instance of the class.
                                       No memory is allocated when a class is declared. 
                                       Memory is allocated as soon as an object is created. 
                                       A class is a group of similar objects. 
                                       Class is a logical entity. A class can only be declared once.
                                       An example of class can be a car. 
                                       2 An object is a real-world entity such as a book, car, etc.
                                       An object is a physical entity. Objects can be created many times as per requirement.
                                       
                                       
                                       
                                       
                                       
                                       
                                       
                                       
